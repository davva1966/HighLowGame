<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:field="urn:jsptagdir:/WEB-INF/tags/form/fields" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:spring="http://www.springframework.org/tags"
	xmlns:form="http://www.springframework.org/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
	<jsp:output omit-xml-declaration="yes" />

	<jsp:directive.attribute name="id" type="java.lang.String" required="true" rtexprvalue="true" description="The identifier for this tag (do not change!)" />
	<jsp:directive.attribute name="field" type="java.lang.String" required="true" rtexprvalue="true" description="The field exposed from the form backing object" />
	<jsp:directive.attribute name="path" type="java.lang.String" required="true" rtexprvalue="true" description="The relative path to the referenced resource" />
	<jsp:directive.attribute name="items" type="java.util.Collection" required="true" rtexprvalue="true" description="The name of the collection displayed in the select box" />
	<jsp:directive.attribute name="label" type="java.lang.String" required="false" rtexprvalue="true" description="The label used for this field, will default to a message bundle if not supplied" />
	<jsp:directive.attribute name="itemLabel" type="java.lang.String" required="false" rtexprvalue="true" description="Name of the property mapped to the inner text of the 'option' tag (will override the configured converter)" />
	<jsp:directive.attribute name="itemValue" type="java.lang.String" required="false" rtexprvalue="true" description="The identifier used as value in the select box (defaults to 'id' for non enum types)" />
	<jsp:directive.attribute name="required" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicates if this field is required (default false)" />
	<jsp:directive.attribute name="disabled" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Specify if this field should be enabled" />
	<jsp:directive.attribute name="multiple" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Specify if the select box should allow multiple selections" />
	<jsp:directive.attribute name="disableFormBinding" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Set to true to disable Spring form binding" />
	<jsp:directive.attribute name="render" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')" />
	<jsp:directive.attribute name="z" type="java.lang.String" required="false" description="Used for checking if element has been modified (to recalculate simply provide empty string value)" />
	<jsp:directive.attribute name="emptyLabel" type="java.lang.String" required="false" description="The label of the empty value" />
	<jsp:directive.attribute name="emptyValue" type="java.lang.String" required="false" description="The value of the empty value" />
	<jsp:directive.attribute name="renderLabel" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if a label should be rendered (default 'true')" />
	<jsp:directive.attribute name="addBreak" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if a line break should be added after the input (default 'true')" />
	<jsp:directive.attribute name="createAllowed" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if create link should be created if the select is empty (default 'true')" />
	<jsp:directive.attribute name="remoteData" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if this select box will load its data remotely (default 'false')" />
	<jsp:directive.attribute name="placeholderCode" type="java.lang.String" required="false" description="The empty value placeholder message code" />
	<jsp:directive.attribute name="allowClear" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if the selected value of this select box can be cleard (default 'false')" />

	<c:if test="${empty render or render}">

		<c:if test="${empty disabled}">
			<c:set value="false" var="disabled" />
		</c:if>

		<c:if test="${empty label}">
			<spring:message code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}" var="label" htmlEscape="false" />
		</c:if>

		<c:if test="${empty required}">
			<c:set value="false" var="required" />
		</c:if>

		<c:if test="${empty multiple}">
			<c:set value="false" var="multiple" />
		</c:if>

		<c:if test="${empty addBreak}">
			<c:set value="true" var="addBreak" />
		</c:if>
		
		<c:if test="${empty createAllowed}">
			<c:set value="true" var="createAllowed" />
		</c:if>
		
		<c:set var="sec_field">
			<spring:escapeBody javaScriptEscape="true">${field}</spring:escapeBody>
		</c:set>

		<c:set var="sec_itemLabel">
			<spring:escapeBody htmlEscape="true">${itemLabel}</spring:escapeBody>
		</c:set>

		<c:if test="${empty emptyLabel}">
			<spring:message code="message_com_ss_highlowgame_dropdownblank" var="emptyLabel" htmlEscape="false" />
		</c:if>

		<c:if test="${empty emptyValue}">
			<c:set value="" var="emptyValue" />
		</c:if>

		<c:if test="${empty renderLabel}">
			<c:set value="true" var="renderLabel" />
		</c:if>
		
		<c:if test="${empty remoteData}">
			<c:set value="false" var="remoteData" />
		</c:if>
		
		<c:if test="${empty placeholderCode}">
			<c:set value="message_com_ss_highlowgame_please_select" var="placeholderCode" />
		</c:if>
		
		<c:if test="${empty allowClear}">
			<c:set value="${not required}" var="allowClear" />
		</c:if>
		
		<spring:message code="${placeholderCode}" var="placeholder" htmlEscape="false" />
		
		<c:set value="singleselect" var="singleSelectClass" />
		<c:set value="multiselect" var="multiSelectClass" />
		<c:if test="${remoteData}">
			<c:set value="singleselectRemote" var="singleSelectClass" />
			<c:set value="multiselectRemote" var="multiSelectClass" />
		</c:if>

		<div id="_${fn:escapeXml(id)}_id">
			<c:choose>
				<c:when test="${not empty items or not required or not createAllowed}">
					<c:if test="${renderLabel}">
						<label for="_${sec_field}_id" title="${label}"> <c:out value="${label}" /> :
						</label>
					</c:if>
					<c:choose>
						<c:when test="${empty itemValue}">
							<c:choose>
								<c:when test="${disableFormBinding}">
									<c:choose>
										<c:when test="${multiple}">
											<select class="${multiSelectClass}" id="_${sec_field}_id" name="${sec_field}" multiple="${multiple}" data-placeholder="${placeholder}">
												<c:forEach items="${items}" var="item">
													<option value="${item}">
														<c:choose>
															<c:when test="${empty itemLabel}">
																<spring:eval expression="item" />
															</c:when>
															<c:otherwise>
																<spring:eval expression="item[sec_itemLabel]" />
															</c:otherwise>
														</c:choose>
													</option>
												</c:forEach>
											</select>
										</c:when>
										<c:otherwise>
											<select class="${singleSelectClass}" id="_${sec_field}_id" name="${sec_field}" data-placeholder="${placeholder}" data-allow-clear="${allowClear}">
												<c:if test="${not required}">
													<!-- 
													<option value="${emptyValue}">
														<c:out value="${emptyLabel}" />
													</option>
													 -->
													 <option></option>
												</c:if>
												<c:forEach items="${items}" var="item">
													<option value="${item}">
														<c:choose>
															<c:when test="${empty itemLabel}">
																<spring:eval expression="item" />
															</c:when>
															<c:otherwise>
																<spring:eval expression="item[sec_itemLabel]" />
															</c:otherwise>
														</c:choose>
													</option>
												</c:forEach>
											</select>
										</c:otherwise>
									</c:choose>
								</c:when>
								<c:otherwise>
									<c:choose>
										<c:when test="${empty itemLabel}">
											<c:choose>
												<c:when test="${multiple}">
													<form:select cssClass="${multiSelectClass}" id="_${sec_field}_id" items="${items}" path="${sec_field}" disabled="${disabled}" multiple="${multiple}" data-placeholder="${placeholder}"/>
												</c:when>
												<c:otherwise>
													<!-- <form:select id="_${sec_field}_id" items="${items}" path="${sec_field}" disabled="${disabled}" /> -->
													<form:select cssClass="${singleSelectClass}" id="_${sec_field}_id" path="${sec_field}" disabled="${disabled}" data-placeholder="${placeholder}" data-allow-clear="${allowClear}">
														<c:if test="${not required}">
															<!-- 
															<option value="${emptyValue}">
																<c:out value="${emptyLabel}" />
															</option>
															 -->
															 <option></option>
														</c:if>
														<form:options items="${items}" />
													</form:select>
												</c:otherwise>
											</c:choose>
										</c:when>
										<c:otherwise>
											<c:choose>
												<c:when test="${multiple}">
													<form:select cssClass="${multiSelectClass}" id="_${sec_field}_id" items="${items}" path="${sec_field}" disabled="${disabled}" multiple="${multiple}" itemLabel="${sec_itemLabel}" data-placeholder="${placeholder}"/>
												</c:when>
												<c:otherwise>
													<!-- <form:select id="_${sec_field}_id" items="${items}" path="${sec_field}" disabled="${disabled}" itemLabel="${sec_itemLabel}"/> -->
													<form:select cssClass="${singleSelectClass}" id="_${sec_field}_id" path="${sec_field}" disabled="${disabled}" data-placeholder="${placeholder}" data-allow-clear="${allowClear}">
														<c:if test="${not required}">
															<!--
															<option value="${emptyValue}">
																<c:out value="${emptyLabel}" />
															</option>
															 -->
															<option></option>
														</c:if>
														<form:options items="${items}" itemLabel="${sec_itemLabel}" />
													</form:select>
												</c:otherwise>
											</c:choose>
										</c:otherwise>
									</c:choose>
									<br />
									<form:errors cssClass="errors" id="_${sec_field}_error_id" path="${sec_field}" />
								</c:otherwise>
							</c:choose>
						</c:when>
						<c:otherwise>
							<c:choose>
								<c:when test="${disableFormBinding}">
									<c:choose>
										<c:when test="${multiple}">
											<select class="${multiSelectClass}" id="_${sec_field}_id" name="${sec_field}" multiple="${multiple}" data-placeholder="${placeholder}">
												<c:forEach items="${items}" var="item">
													<option value="${item[fn:escapeXml(itemValue)]}">
														<c:choose>
															<c:when test="${empty itemLabel}">
																<spring:eval expression="item" />
															</c:when>
															<c:otherwise>
																<spring:eval expression="item[sec_itemLabel]" />
															</c:otherwise>
														</c:choose>
													</option>
												</c:forEach>
											</select>
										</c:when>
										<c:otherwise>
											<select class="${singleSelectClass}" id="_${sec_field}_id" name="${sec_field}" multiple="${multiple}" data-placeholder="${placeholder}" data-allow-clear="${allowClear}">
												<c:if test="${not required}">
													<!-- 
													<option value="${emptyValue}">
														<c:out value="${emptyLabel}" />
													</option>
													 -->
													<option></option>														
												</c:if>
												<c:forEach items="${items}" var="item">
													<option value="${item[fn:escapeXml(itemValue)]}">
														<c:choose>
															<c:when test="${empty itemLabel}">
																<spring:eval expression="item" />
															</c:when>
															<c:otherwise>
																<spring:eval expression="item[sec_itemLabel]" />
															</c:otherwise>
														</c:choose>
													</option>
												</c:forEach>
											</select>
										</c:otherwise>
									</c:choose>
								</c:when>
								<c:otherwise>
									<c:choose>
										<c:when test="${empty itemLabel}">
											<c:choose>
												<c:when test="${multiple}">
													<form:select cssClass="${multiSelectClass}" id="_${sec_field}_id" items="${items}" path="${sec_field}" disabled="${disabled}" multiple="${multiple}" itemValue="${fn:escapeXml(itemValue)}" data-placeholder="${placeholder}"/>
												</c:when>
												<c:otherwise>
													<!-- <form:select id="_${sec_field}_id" items="${items}" path="${sec_field}" disabled="${disabled}" itemValue="${fn:escapeXml(itemValue)}" /> -->
													<form:select cssClass="${singleSelectClass}" id="_${sec_field}_id" path="${sec_field}" disabled="${disabled}" data-placeholder="${placeholder}" data-allow-clear="${allowClear}">
														<c:if test="${not required}">
															<!-- 
															<option value="${emptyValue}">
																<c:out value="${emptyLabel}" />
															</option>
															 -->
															<option></option>
														</c:if>
														<form:options items="${items}" itemValue="${fn:escapeXml(itemValue)}" />
													</form:select>
												</c:otherwise>
											</c:choose>
										</c:when>
										<c:otherwise>
											<c:choose>
												<c:when test="${multiple}">
													<form:select cssClass="${multiSelectClass}" id="_${sec_field}_id" items="${items}" path="${sec_field}" disabled="${disabled}" multiple="${multiple}" itemValue="${fn:escapeXml(itemValue)}" itemLabel="${sec_itemLabel}" data-placeholder="${placeholder}"/>
												</c:when>
												<c:otherwise>
													<!-- <form:select id="_${sec_field}_id" items="${items}" path="${sec_field}" disabled="${disabled}" itemValue="${fn:escapeXml(itemValue)}" itemLabel="${sec_itemLabel}"/> -->
													<form:select cssClass="${singleSelectClass}" id="_${sec_field}_id" path="${sec_field}" disabled="${disabled}" data-placeholder="${placeholder}" data-allow-clear="${allowClear}">
														<c:if test="${not required}">
															<!-- 
															<option value="${emptyValue}">
																<c:out value="${emptyLabel}" />
															</option>
															 -->
															<option></option>
														</c:if>
														<form:options items="${items}" itemValue="${fn:escapeXml(itemValue)}" itemLabel="${sec_itemLabel}" />
													</form:select>
												</c:otherwise>
											</c:choose>
										</c:otherwise>
									</c:choose>
									<br />
									<form:errors cssClass="errors" id="_${sec_field}_error_id" path="${sec_field}" />
								</c:otherwise>
							</c:choose>
						</c:otherwise>
					</c:choose>
					<!-- 
					<c:choose>
						<c:when test="${multiple == false}">
							<script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_${sec_field}_id', widgetType: 'dijit.form.FilteringSelect', widgetAttrs : {hasDownArrow : true}})); </script>
						</c:when>
						disabled due to http://jira.springframework.org/browse/ROO-909 <c:otherwise> <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_${field}_id', widgetType: 'dijit.form.MultiSelect', widgetAttrs : {}})); </script> </c:otherwise> 
					</c:choose>
					-->
				</c:when>
				<c:otherwise>
					<field:reference field="${label}" id="${id}" path="${path}" required="${required}" />
				</c:otherwise>
			</c:choose>
		</div>
		<c:if test="${addBreak}">
			<br />
		</c:if>
	</c:if>
</jsp:root>